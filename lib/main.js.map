{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'DBAY-MIRAGE'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nPATH                      = require 'path'\ntypes                     = new ( require 'intertype' ).Intertype()\n{ isa\n  type_of\n  validate\n  validate_list_of }      = types.export()\nSQL                       = String.raw\nGUY                       = require 'guy'\n{ HTMLISH: ITXH }         = require 'intertext'\nURL                       = require 'url'\n{ Html }                  = require './html'\n\n\n#===========================================================================================================\ntypes.declare 'constructor_cfg', tests:\n  \"@isa.object x\":                                  ( x ) -> @isa.object x\n  \"( @isa.object x.db ) or ( @isa.function x.db \":  ( x ) -> ( @isa.object x.db ) or ( @isa.function x.db )\n\n#-----------------------------------------------------------------------------------------------------------\ntypes.declare 'mrg_refresh_datasource_cfg', tests:\n  \"@isa.object x\":                ( x ) -> @isa.object x\n  \"@isa.nonempty_text x.dsk\":     ( x ) -> @isa.nonempty_text x.dsk\n  \"@isa.boolean x.force\":         ( x ) -> @isa.boolean x.force\n\n#-----------------------------------------------------------------------------------------------------------\ntypes.declare 'mrg_append_to_loc_cfg', tests:\n  \"@isa.object x\":                ( x ) -> @isa.object x\n  \"@isa.nonempty_text x.dsk\":     ( x ) -> @isa.nonempty_text x.dsk\n  \"@isa.text x.text\":             ( x ) -> @isa.text x.text\n  \"@isa.boolean x.nl\":            ( x ) -> @isa.boolean x.nl\n\n#-----------------------------------------------------------------------------------------------------------\ntypes.declare 'mrg_walk_line_rows_cfg', tests:\n  \"@isa.object x\":                      ( x ) -> @isa.object x\n  \"@isa.nonempty_text x.dsk\":           ( x ) -> @isa.nonempty_text x.dsk\n\n#-----------------------------------------------------------------------------------------------------------\ntypes.declare 'mrg_walk_par_rows_cfg', tests:\n  \"@isa.object x\":                      ( x ) -> @isa.object x\n  \"@isa.nonempty_text x.dsk\":           ( x ) -> @isa.nonempty_text x.dsk\n\n#-----------------------------------------------------------------------------------------------------------\ntypes.declare 'mrg_set_active_cfg', tests:\n  \"@isa.object x\":                      ( x ) -> @isa.object x\n  \"@isa.nonempty_text x.dsk\":           ( x ) -> @isa.nonempty_text x.dsk\n  \"@isa_optional.integer x.oln\":        ( x ) -> @isa_optional.integer x.oln\n  \"@isa_optional.integer x.trk\":        ( x ) -> @isa_optional.integer x.trk\n  \"@isa_optional.integer x.pce\":        ( x ) -> @isa_optional.integer x.pce\n\n#-----------------------------------------------------------------------------------------------------------\ntypes.declare 'mrg_register_dsk_cfg', tests:\n  \"@isa.object x\":                            ( x ) -> @isa.object x\n  \"@isa_optional.mrg_fspath_for_url x.path\":  ( x ) -> @isa_optional.mrg_fspath_for_url x.path\n  \"@isa_optional.mrg_url_for_dsk x.url\":      ( x ) -> @isa_optional.mrg_url_for_dsk x.url\n  \"exactly 1 of x.path, x.url must be set\":   ( x ) -> ( x.path? or x.url? ) and not ( x.path? and x.url? )\n\n#-----------------------------------------------------------------------------------------------------------\ntypes.declare 'mrg_append_text_cfg', tests:\n  \"@isa.object x\":                            ( x ) -> @isa.object x\n  \"@isa.nonempty_text x.dsk\":                 ( x ) -> @isa.nonempty_text x.dsk\n  \"@isa.positive_integer x.trk\":              ( x ) -> @isa.positive_integer x.trk\n  \"@isa.text x.text\":                         ( x ) -> @isa.text x.text\n\n#-----------------------------------------------------------------------------------------------------------\ntypes.declare 'mrg_fspath_for_url', tests:\n  \"@isa.text x\":          ( x ) -> @isa.text x\n  \"x.startsWith '/'\":     ( x ) -> x.startsWith '/'\n\n#-----------------------------------------------------------------------------------------------------------\ntypes.declare 'mrg_url_for_dsk', tests:\n  \"@isa.text x\":                          ( x ) -> @isa.text x\n  \"( /^(file:\\/\\/\\/)|(live:)/ ).test x\":  ( x ) -> ( /^(file:\\/\\/\\/|live:)/ ).test x\n\n\n\n#===========================================================================================================\nclass @Mrg\n\n  #---------------------------------------------------------------------------------------------------------\n  @C: GUY.lft.freeze\n    defaults:\n      #.....................................................................................................\n      constructor_cfg:\n        db:               null\n        prefix:           'mrg'\n      #.....................................................................................................\n      mrg_refresh_datasource_cfg:\n        dsk:              null\n        force:            false\n      #.....................................................................................................\n      mrg_append_to_loc_cfg:\n        dsk:              null\n        text:             null\n        nl:               true\n      #.....................................................................................................\n      mrg_walk_line_rows_cfg:\n        dsk:              null\n      #.....................................................................................................\n      mrg_walk_par_rows_cfg:\n        dsk:              null\n      #.....................................................................................................\n      mrg_register_dsk_cfg:\n        dsk:              null\n        path:             null\n        url:              null\n      #.....................................................................................................\n      mrg_set_active_cfg:\n        dsk:              null\n        oln:              null\n        trk:              null\n        pce:              null\n      #.....................................................................................................\n      mrg_append_text_cfg:\n        dsk:              null\n        trk:              1\n        txt:              null\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    @cfg    = { @constructor.C.defaults.constructor_cfg..., cfg..., }\n    GUY.props.hide @, 'types', types\n    @types.validate.constructor_cfg @cfg\n    { db, } = GUY.obj.pluck_with_fallback @cfg, null, 'db'\n    GUY.props.hide @, 'db', db\n    @cfg    = GUY.lft.freeze @cfg\n    @db.create_stdlib()\n    @_set_variables?()\n    @_create_sql_functions?()\n    @_compile_sql?()\n    @_procure_infrastructure?()\n    GUY.props.hide @, 'html', new Html { mrg: @, prefix: @cfg.prefix, }\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  _set_variables: ->\n    @db.setv 'allow_change_on_mirror', 0\n\n  #---------------------------------------------------------------------------------------------------------\n  _create_sql_functions: ->\n    { prefix } = @cfg\n    #-------------------------------------------------------------------------------------------------------\n    @db.create_function\n      name:           prefix + '_re_is_blank'\n      deterministic:  true\n      varargs:        false\n      call:           ( txt ) -> if ( /^\\s*$/.test txt ) then 1 else 0\n    #-------------------------------------------------------------------------------------------------------\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  _procure_infrastructure: ->\n    ### TAINT skip if tables found ###\n    { prefix } = @cfg\n    @db.set_foreign_keys_state false\n    @db SQL\"\"\"\n      drop view   if exists #{prefix}_rwnmirror;\n      drop view   if exists #{prefix}_parlnrs0;\n      drop view   if exists #{prefix}_parlnrs;\n      drop view   if exists #{prefix}_pars0;\n      drop view   if exists #{prefix}_pars;\n      drop view   if exists #{prefix}_lines;\n      drop view   if exists #{prefix}_location_from_dsk_locid;\n      drop view   if exists #{prefix}_prv_nxt_xtra_from_dsk_locid;\n      drop view   if exists #{prefix}_parmirror;\n      drop view   if exists #{prefix}_next_free_oln;\n      drop table  if exists #{prefix}_locs;\n      drop table  if exists #{prefix}_raw_mirror;\n      drop table  if exists #{prefix}_mirror;\n      drop table  if exists #{prefix}_datasources;\"\"\"\n    @db.set_foreign_keys_state true\n    #-------------------------------------------------------------------------------------------------------\n    # TABLES\n    #.......................................................................................................\n    @db SQL\"\"\"\n      create table #{prefix}_datasources (\n          dsk     text not null,\n          path    text,\n          url     text,\n          digest  text default null,\n        primary key ( dsk ) );\"\"\"\n    #.......................................................................................................\n    ### TAINT need to indicate column nr for fine-grained source locations ###\n    @db SQL\"\"\"\n      -- * mirrors actual file contents and records computed changes\n      -- * is format-agnostic\n      create table #{prefix}_mirror (\n          dsk     text    not null,                         -- data source key\n          oln     integer not null,                         -- original line nr (1-based)\n          trk     integer not null default 1,               -- track number\n          pce     integer not null default 1,               -- piece number\n          act     boolean not null default 1,               -- true: active, false: deleted\n        foreign key ( dsk ) references #{prefix}_datasources,\n        primary key ( dsk, oln, trk, pce )\n        check ( trk > 0 and floor( trk ) = trk )\n        check ( act in ( 0, 1 ) ) );\"\"\"\n    #.......................................................................................................\n    @db SQL\"\"\"\n      create table #{prefix}_raw_mirror (\n          dsk     text    not null,\n          oln     integer not null,\n          trk     integer not null default 1,\n          pce     integer not null default 1,\n          mat     boolean not null generated always as (\n            not #{prefix}_re_is_blank( txt ) ) virtual,     -- material, i.e. non-blank\n          txt     text    not null,\n        primary key ( dsk, oln, trk, pce ),\n        foreign key ( dsk, oln, trk, pce ) references #{prefix}_mirror\n        check ( mat in ( 0, 1 ) ) );\"\"\"\n    #.......................................................................................................\n    @db SQL\"\"\"\n      -- Same as `mrg_mirror`, but with row numbers *for active rows*\n      create view #{prefix}_rwnmirror as select\n          row_number() over w as rwn,\n          *\n        from #{prefix}_mirror\n        where act\n        window w as ( order by dsk, oln, trk, pce )\n        order by dsk, oln, trk, pce;\"\"\"\n    #.......................................................................................................\n    @db SQL\"\"\"\n      -- Same as `mrg_rwnmirror` but only active, material lines (i.e. no lines that are deactivated\n      -- and/or blank), with PARagraph numbers added (for the technique ised here see [Gaps &\n      -- Islands](https://github.com/loveencounterflow/gaps-and-islands#the-gaps-and-islands-pattern).\n      create view #{prefix}_parlnrs0 as select\n          r1.rwn - ( dense_rank() over w ) + 1 as par,\n          r1.*,\n          r2.mat,\n          r2.txt\n        from #{prefix}_rwnmirror  as r1\n        join #{prefix}_raw_mirror as r2\n        where r1.act and r2.mat\n        window w as ( partition by r1.dsk order by r1.rwn )\n        order by r1.rwn;\"\"\"\n    #.......................................................................................................\n    @db SQL\"\"\"\n      -- First (`rwn1`) and last (`rwn2`) RoW Number of each (WS-delimited) `par`agraph.\n      create view #{prefix}_parlnrs as select\n          dsk         as dsk,\n          par         as par,\n          min( rwn )  as rwn1,\n          max( rwn )  as rwn2\n        from #{prefix}_parlnrs0\n        group by par\n        order by rwn1;\"\"\"\n    #.......................................................................................................\n    @db SQL\"\"\"\n      -- Same as `mrg_mirror` but with PARagraph numbers added.\n      create view #{prefix}_parmirror as select\n          m.dsk                                                 as dsk,\n          m.oln                                                 as oln,\n          m.trk                                                 as trk,\n          m.pce                                                 as pce,\n          m.act                                                 as act,\n          r.mat                                                 as mat,\n          ( select\n                p.par as par\n              from #{prefix}_parlnrs as p\n              where m.rwn between p.rwn1 and p.rwn2 limit 1 )   as par,\n          r.txt                                                 as txt\n        from #{prefix}_rwnmirror  as m\n        join #{prefix}_raw_mirror as r using ( oln, trk, pce )\n        order by rwn;\"\"\"\n    # #.......................................................................................................\n    # @db SQL\"\"\"\n    #   -- needs variables 'dsk'\n    #   create view #{prefix}_lines as select distinct\n    #       r1.dsk                                              as dsk,\n    #       r1.rwn                                              as rwn,\n    #       r1.oln                                              as oln,\n    #       r1.par                                              as par,\n    #       coalesce( group_concat( r1.txt, '' ) over w, '' )   as txt\n    #     from #{prefix}_parmirror as r1\n    #     where true\n    #       and ( r1.dsk = std_getv( 'dsk' ) )\n    #       and ( r1.act )\n    #     window w as (\n    #       partition by r1.oln\n    #       order by r1.oln, r1.trk, r1.pce\n    #       range between unbounded preceding and unbounded following );\"\"\"\n    #.......................................................................................................\n    @db SQL\"\"\"\n      -- needs variables 'dsk'\n      create view #{prefix}_pars0 as select distinct\n          r1.dsk                                                                    as dsk,\n          r2.rwn1                                                                   as rwn1,\n          r2.rwn2                                                                   as rwn2,\n          r1.par                                                                    as par,\n          coalesce( group_concat( r1.txt, char( 10 ) ) over w, '' ) || char( 10 )   as txt\n        from #{prefix}_parmirror  as r1\n        join #{prefix}_parlnrs    as r2 using ( dsk, par )\n        -- join #{prefix}_raw_mirror as r3 using ( oln, trk, pce )\n        where true\n          and ( r1.dsk = std_getv( 'dsk' ) )\n          and ( r1.act )\n        window w as (\n          partition by r1.par\n          order by r1.oln, r1.trk, r1.pce\n          range between unbounded preceding and unbounded following );\"\"\"\n    #.......................................................................................................\n    @db SQL\"\"\"\n      -- needs variables 'dsk'\n      create view #{prefix}_pars as select\n          p.dsk     as dsk,\n          r1.oln    as oln,\n          r1.trk    as trk,\n          r1.pce    as pce,\n          r2.oln    as oln2,\n          p.rwn1    as rwn1,\n          p.rwn2    as rwn2,\n          p.par     as par,\n          p.txt     as txt\n        from #{prefix}_pars0      as p\n        join #{prefix}_parlnrs0   as r1 on ( r1.rwn = p.rwn1 )\n        join #{prefix}_parlnrs0   as r2 on ( r2.rwn = p.rwn2 )\n        order by p.dsk, p.rwn1;\"\"\"\n    #.......................................................................................................\n    @db SQL\"\"\"\n      create view #{prefix}_next_free_oln as select\n          coalesce( max( oln ), 0 ) + 1 as oln\n        from #{prefix}_mirror\n        where true\n          and ( dsk = std_getv( 'dsk' ) )\n          and ( trk = std_getv( 'trk' ) )\n        limit 1;\"\"\"\n    # #-------------------------------------------------------------------------------------------------------\n    # TRIGGERS\n    #.......................................................................................................\n    @db SQL\"\"\"\n      create trigger #{prefix}_before_delete_on_mirror before delete on #{prefix}_mirror\n        begin\n          select case when old.trk = 1 and not std_getv( 'allow_change_on_mirror' ) then\n          raise( fail, '^mirage@1^ not allowed to modify table #{prefix}_mirror for trk = 1' ) end;\n          end;\"\"\"\n    @db SQL\"\"\"\n      create trigger #{prefix}_before_insert_on_mirror before insert on #{prefix}_mirror\n        begin\n          select case when new.trk = 1 and not std_getv( 'allow_change_on_mirror' ) then\n          raise( fail, '^mirage@2^ not allowed to modify table #{prefix}_mirror for trk = 1' ) end;\n          end;\"\"\"\n    @db SQL\"\"\"\n      create trigger #{prefix}_before_update_on_mirror before update on #{prefix}_mirror\n        begin\n          select case when old.trk = 1 and not std_getv( 'allow_change_on_mirror' ) then\n          raise( fail, '^mirage@3^ not allowed to modify table #{prefix}_mirror for trk = 1' ) end;\n          end;\"\"\"\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  _compile_sql: ->\n    { prefix } = @cfg\n    #.......................................................................................................\n    GUY.props.hide @, 'sql',\n      #.....................................................................................................\n      get_db_object_count:  SQL\"\"\"\n        select count(*) as count from sqlite_schema where starts_with( $name, $prefix || '_' );\"\"\"\n      #.....................................................................................................\n      ds_entry_from_dsk:  SQL\"\"\"\n        select * from #{prefix}_datasources where dsk = $dsk;\"\"\"\n      #.....................................................................................................\n      update_digest: SQL\"\"\"\n        update #{prefix}_datasources set digest = $digest where dsk = $dsk;\"\"\"\n      #.....................................................................................................\n      delete_raw_mirror_dsk: SQL\"\"\"\n        delete from #{prefix}_raw_mirror where dsk = $dsk;\"\"\"\n      #.....................................................................................................\n      delete_mirror_dsk: SQL\"\"\"\n        delete from #{prefix}_mirror where dsk = $dsk;\"\"\"\n      #.....................................................................................................\n      upsert_datasource: @db.create_insert {\n        into:   prefix + '_datasources',\n        fields: [ 'dsk', 'path', 'url', ],\n        on_conflict: { update: true, }, }\n      #.....................................................................................................\n      insert_line_into_mirror: @db.create_insert {\n        into:       prefix + '_mirror',\n        fields:     [ 'dsk', 'oln', ], }\n      #.....................................................................................................\n      insert_line_into_raw_mirror: @db.create_insert {\n        into:       prefix + '_raw_mirror',\n        fields:     [ 'dsk', 'oln', 'txt', ], }\n      #.....................................................................................................\n      insert_trk_line: @db.create_insert {\n        into:       prefix + '_mirror',\n        fields:     [ 'dsk', 'oln', 'trk', 'pce', ], }\n      #.....................................................................................................\n      append_line_to_mirror: SQL\"\"\"\n        insert into #{prefix}_mirror ( dsk, oln, trk )\n          values ( $dsk, ( select oln from #{prefix}_next_free_oln ), $trk )\n          returning *;\"\"\"\n      #.....................................................................................................\n      append_text_to_raw_mirror: SQL\"\"\"\n        insert into #{prefix}_raw_mirror ( dsk, oln, trk, txt )\n          values ( $dsk, $oln, $trk, $text )\n          returning *;\"\"\"\n      # #.....................................................................................................\n      # insert_lnpart: @db.create_insert {\n      #   into:       prefix + '_mirror',\n      #   fields:     [ 'dsk', 'oln', 'trk', 'pce', 'txt', ], }\n      # #.....................................................................................................\n      # insert_xtra: @db.create_insert {\n      #   into:       prefix + '_mirror',\n      #   fields:     [ 'dsk', 'oln', 'pce', 'xtra', 'txt', ],\n      #   returning:  '*', }\n      # #.....................................................................................................\n      # insert_xtra_using_dsk_locid: SQL\"\"\"\n      #   -- needs variables 'dsk', 'locid'\n      #   -- unfortunately, got to repeat the `std_assert()` call here\n      #   insert into #{prefix}_mirror ( dsk, oln, pce, xtra, txt )\n      #     select\n      #         $dsk                                                    as dsk,\n      #         std_assert(\n      #           oln,\n      #           '^insert_xtra_using_dsk_locid@546^' ||\n      #           ' unknown locid ' || quote( std_getv( 'locid' ) ) )   as oln,\n      #         pce                                                     as pce,\n      #         nxt_xtra                                                as nxt_xtra,\n      #         $txt                                                    as txt\n      #       from #{prefix}_prv_nxt_xtra_from_dsk_locid\n      #     returning *;\"\"\"\n      # #.....................................................................................................\n      # insert_locid: @db.create_insert {\n      #   into:       prefix + '_locs',\n      #   fields:     [ 'dsk', 'oln', 'pce', 'props', 'del', ], }\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  register_dsk: ( cfg ) ->\n    validate.mrg_register_dsk_cfg cfg\n    if cfg.path?                              then  cfg.url   = @_url_from_path cfg.path\n    else if @types.isa.mrg_file_url cfg.url   then  cfg.path  = @_path_from_url cfg.url\n    else                                            cfg.path  = null\n    @db @sql.upsert_datasource, cfg\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  allowing_change_on_mirror: ( f ) ->\n    validate.function f\n    allow_change_on_mirror = @db.getv 'allow_change_on_mirror'\n    @db.setv 'allow_change_on_mirror', 1\n    try\n      return f()\n    finally\n      @db.setv 'allow_change_on_mirror', allow_change_on_mirror\n\n  #---------------------------------------------------------------------------------------------------------\n  append_text: ( cfg ) ->\n    validate.mrg_append_text_cfg ( cfg = { @constructor.C.defaults.mrg_append_text_cfg..., cfg..., } )\n    { dsk\n      trk\n      text    } = cfg\n    { prefix  } = @cfg\n    lines       = text.split '\\n'\n    R           = []\n    @db.setv 'dsk', dsk\n    @db.setv 'trk', trk\n    @allowing_change_on_mirror =>\n      for line in lines\n        d = @db.first_row @sql.append_line_to_mirror, { dsk, trk, }\n        debug '^32243^', d\n        R.push @db.first_row @sql.append_text_to_raw_mirror,  { dsk, oln: d.oln, trk, text: line, }\n      return null\n    return R\n\n  #---------------------------------------------------------------------------------------------------------\n  _ds_entry_from_dsk: ( dsk ) -> @db.single_row @sql.ds_entry_from_dsk, { dsk, }\n  _update_digest: ( dsk, digest ) -> @db @sql.update_digest, { dsk, digest, }\n\n  #-----------------------------------------------------------------------------------------------------------\n  _delete_lines: ( dsk ) ->\n    @db @sql.delete_raw_mirror_dsk, { dsk, }\n    @db @sql.delete_mirror_dsk,     { dsk, }\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  _url_from_path: ( path ) -> ( URL.pathToFileURL path ).href\n  _path_from_url: ( url  ) -> URL.fileURLToPath url\n\n  #---------------------------------------------------------------------------------------------------------\n  refresh_datasource: ( cfg ) ->\n    @db.setv 'allow_change_on_mirror', 1\n    try\n      R = @_refresh_datasource cfg\n    finally\n      @db.setv 'allow_change_on_mirror', 0\n    return R\n\n  #---------------------------------------------------------------------------------------------------------\n  _refresh_datasource: ( cfg ) ->\n    validate.mrg_refresh_datasource_cfg ( cfg = { @constructor.C.defaults.mrg_refresh_datasource_cfg..., cfg..., } )\n    { dsk\n      force       } = cfg\n    { prefix      } = @cfg\n    { path\n      url\n      digest      } = @_ds_entry_from_dsk dsk\n    unless path?\n      throw new Error \"^Mirage/refresh_datasource@1^ unable to refresh datasource #{rpr dsk} (URL: #{rpr url})\"\n    current_digest  = GUY.fs.get_content_hash path\n    counts          = { files: 0, bytes: 0, }\n    #.......................................................................................................\n    if force or ( digest isnt current_digest )\n      #.....................................................................................................\n      @db =>\n        @_delete_lines dsk\n        insert_line_into_mirror     = @db.prepare @sql.insert_line_into_mirror\n        insert_line_into_raw_mirror = @db.prepare @sql.insert_line_into_raw_mirror\n        oln                         = 0\n        #...................................................................................................\n        for line from GUY.fs.walk_lines path, { decode: false, }\n          oln++\n          counts.bytes   += line.length\n          txt             = line.toString 'utf-8'\n          ### TAINT reduce to single statement ###\n          insert_line_into_mirror.run     { dsk, oln, }\n          insert_line_into_raw_mirror.run { dsk, oln, txt, }\n        #...................................................................................................\n        counts.files++\n        @_update_digest dsk, current_digest\n        return null\n    #.......................................................................................................\n    return counts\n\n\n  #=========================================================================================================\n  # CONTENT RETRIEVAL\n  #---------------------------------------------------------------------------------------------------------\n  get_text:       ( cfg ) -> ( d.line for d from @walk_line_rows cfg ).join '\\n'\n  get_line_rows:  ( cfg ) -> [ ( @walk_line_rows cfg )..., ]\n  get_par_rows:   ( cfg ) -> [ ( @walk_par_rows  cfg )..., ]\n\n  #---------------------------------------------------------------------------------------------------------\n  walk_line_rows: ( cfg ) ->\n    validate.mrg_walk_line_rows_cfg ( cfg = { @constructor.C.defaults.mrg_walk_line_rows_cfg..., cfg..., } )\n    { dsk       } = cfg\n    { prefix    } = @cfg\n    @db.setv 'dsk', dsk\n    return @db SQL\"select * from #{prefix}_lines;\"\n\n  #---------------------------------------------------------------------------------------------------------\n  walk_par_rows: ( cfg ) ->\n    validate.mrg_walk_par_rows_cfg ( cfg = { @constructor.C.defaults.mrg_walk_par_rows_cfg..., cfg..., } )\n    { dsk       } = cfg\n    { prefix    } = @cfg\n    @db.setv 'dsk', dsk\n    return @db SQL\"select * from #{prefix}_pars;\"\n\n  #---------------------------------------------------------------------------------------------------------\n  activate:   ( cfg ) -> @_set_active { cfg..., act: true, }\n  deactivate: ( cfg ) -> @_set_active { cfg..., act: false, }\n\n  #---------------------------------------------------------------------------------------------------------\n  _set_active: ( cfg ) ->\n    validate.mrg_set_active_cfg ( cfg = { @constructor.C.defaults.mrg_set_active_cfg..., cfg..., } )\n    { dsk\n      oln\n      trk\n      pce\n      act } = cfg\n    act     = if act then 1 else 0\n    sql     = SQL\"update mrg_mirror set act = $act where ( dsk = $dsk )\"\n    sql    += SQL\" and ( oln = $oln )\" if oln?\n    sql    += SQL\" and ( trk = $trk )\" if trk?\n    sql    += SQL\" and ( pce = $pce )\" if pce?\n    sql    += SQL\";\"\n    ( @db.prepare sql ).run { dsk, oln, trk, pce, act, }\n    return null\n\n  #=========================================================================================================\n  # CONTENT MANIPULATION\n  #---------------------------------------------------------------------------------------------------------\n  # append_to_loc: ( cfg ) ->\n    # validate.mrg_append_to_loc_cfg ( cfg = { @constructor.C.defaults.mrg_append_to_loc_cfg..., cfg..., } )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
  ]
}